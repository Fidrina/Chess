/**
 *   *************************************************************************
 *   *        **********        **********        **********        **********
 *   *        **********        **********        **********        **********
 *   *        **********        **********        **********        **********
 *   *************************************************************************
 *   **********        **********        **********        **********        *
 *   **********        **********        **********        **********        *
 *   **********        **********        **********        **********        *
 *   *************************************************************************
 *   *        **********        **********        **********        **********
 *   *        **********        **********        **********        **********
 *   *        **********        **********        **********        **********
 *   *************************************************************************
 *   **********        **********        **********        **********        *
 *   **********        **********        **********        **********        *
 *   **********        **********        **********        **********        *
 *   *************************************************************************
 *   *        **********        **********        **********        **********
 *   *        **********        **********        **********        **********
 *   *        **********        **********        **********        **********
 *   *************************************************************************
 *   **********        **********        **********        **********        *
 *   **********        **********        **********        **********        *
 *   **********        **********        **********        **********        *
 *   *************************************************************************
 *   *        **********        **********        **********        **********
 *   *        **********        **********        **********        **********
 *   *        **********        **********        **********        **********
 *   *************************************************************************
 *   **********        **********        **********        **********        *
 *   **********        **********        **********        **********        *
 *   **********        **********        **********        **********        *
 *   *************************************************************************
 */

/**
 * 
 */
let WhiteHorsePositions = [];

/**
 * 
 */
let BlackHorsePositions = [];

/**
 * Função responsável por auxiliar a validação da posição da peça.
 * 
 * @param {integer} x 
 * @param {integer} y 
 */
let ValidaLimitesTabuleiro = function (x, y) {
    if (x < 1 || x > 8 || y < 1 || y > 8) {
        return false;
    } else {
        return true;
    }
}

/**
 * Função responsável por retornar um array de posições para o cavalo.
 * 
 * @param array position
 * 
 * @return array possibilities
 */
function Horse(position = []) {
    let x = 1;
    let y = 1;
}

function Bishop() {}

function Queen() {}

function Rook() {}

function Pawn() {}

function King() {}